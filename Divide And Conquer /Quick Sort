import java.io.*;
import java.util.*;

public class QuickSort {
    public static int partition(int[] arr, int l, int h){
        int i = l;
        //pivot is the first element in an array
        int pivot = arr[l];

        for (int j = l+1; j<=h; j++){
            // j is to take care of the biger elements then the pivot
            // i is to take care of the smaller elements then the pivot
            if (arr[j]<= pivot){
                i = i + 1;
                // swap arr[i], arr[j]
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    // swap (arr[l], arr[i])
    //to return the corect index of the pivot element
    int temp = arr[l];
    arr[l] = arr[i];
    arr[i] = temp;
    
    return i;
    }

    public static void quickSort(int[] arr,int l, int h){
        if(l<h){
            //1. diveide teh array into sub problems
            int m = partition ( arr,l,h);
            //2. Conqure those subproblems via recursion
            quickSort(arr,l,m-1);
            quickSort(arr,m+h, h);
        }
    }

    public static void printArr(int[] arr,int n){
        for(int i = 0; i<n; i++){
            System.out.print(arr[i]+ "  ");
        }
        System.out.println(" ");
    }

    public static void main(String[] args) {
    int[] arr = {50,20,70,90,10,13,17};
    int n = arr.length;
    System.out.println("Array before Sorting; " );
    printArr(arr,n);
    
    quickSort(arr,0,n-1);
    System.out.println("Array after sort; ");
    printArr(arr,n);
    }
    
}
